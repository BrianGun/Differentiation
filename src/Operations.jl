[1] /(x::Union{SparseArrays.SparseVector{Tv, Ti}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseVector{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}}, false}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, false}} where {Tv, Ti}, a::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1476
[2] /(A::LinearAlgebra.SymTridiagonal, B::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:213
[3] /(J::LinearAlgebra.UniformScaling, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:273
[4] /(A::LinearAlgebra.Symmetric, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:638
[5] /(A::LinearAlgebra.UnitLowerTriangular, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:871
[6] /(x::Number, B::BitArray) in Base at bitarray.jl:1201
[7] /(::Number, ::Missing) in Base at missing.jl:124
[8] /(x::Number, v::AbstractVector) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1156
[9] /(A::LinearAlgebra.UpperTriangular, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:869
[10] /(B::BitArray, x::Number) in Base at bitarray.jl:1200
[11] /(A::LinearAlgebra.Bidiagonal, B::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:375
[12] /(A::LinearAlgebra.Tridiagonal, B::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:744
[13] /(A::LinearAlgebra.LowerTriangular, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:869
[14] /(x::Base.TwicePrecision, v::Number) in Base at twiceprecision.jl:315
[15] /(H::LinearAlgebra.UpperHessenberg, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:116
[16] /(A::LinearAlgebra.UnitUpperTriangular, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:871
[17] /(D::LinearAlgebra.Diagonal, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:192
[18] /(A::AbstractArray, B::Number) in Base at arraymath.jl:55
[19] /(::Missing, ::Number) in Base at missing.jl:123
[20] /(x::T, y::T) where T<:Number in Base at promotion.jl:457
[21] /(x::Number, y::Number) in Base at promotion.jl:382
[22] LinearAlgebra.Hessenberg(F::LinearAlgebra.Hessenberg, μ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:416
[23] LinearAlgebra.UniformScaling(λ::T) where T<:Number in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:40
[24] \(B::Number, A::LinearAlgebra.SymTridiagonal) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:214
[25] \(B::Number, A::LinearAlgebra.Tridiagonal) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:745
[26] \(x::Number, A::LinearAlgebra.UpperTriangular) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:880
[27] \(x::Number, A::LinearAlgebra.UnitUpperTriangular) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:882
[28] \(x::Number, A::LinearAlgebra.LowerTriangular) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:880
[29] \(x::Number, A::LinearAlgebra.UnitLowerTriangular) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:882
[30] \(x::Number, D::LinearAlgebra.Diagonal) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:193
[31] \(B::Number, A::LinearAlgebra.Bidiagonal) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:376
[32] \(x::Number, J::LinearAlgebra.UniformScaling) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:281
[33] \(x::Number, H::LinearAlgebra.UpperHessenberg) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:117
[34] \(A::Number, B::AbstractArray) in Base at arraymath.jl:52
[35] adjoint(x::Number) in Base at number.jl:213
[36] axpby!(alpha::Number, x::Union{DenseArray{T}, AbstractVector{T}}, beta::Number, y::Union{DenseArray{T}, AbstractVector{T}}) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra.BLAS at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\blas.jl:607
[37] axpy!(alpha::Number, x::Union{Base.ReinterpretArray{T, 1, S, A, IsReshaped} where {A<:Union{SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, IsReshaped, S}, Base.ReshapedArray{T, 1, A} where A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where {T, N, A<:Union{SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, IsReshaped, S}, SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, SubArray{T, 1, A, I} where {A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where {T, N, A<:Union{SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, IsReshaped, S}, Base.ReshapedArray{T, N, A} where {T, N, A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where {T, N, A<:Union{SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, IsReshaped, S}, SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}}, DenseArray}, I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T, N, A, Tuple{}} where {T, N, A<:AbstractUnitRange}}}}}, DenseArray{T}, DenseVecOrMat{T}}, y::Union{Base.ReinterpretArray{T, 1, S, A, IsReshaped} where {A<:Union{SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, IsReshaped, S}, Base.ReshapedArray{T, 1, A} where A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where {T, N, A<:Union{SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, IsReshaped, S}, SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, SubArray{T, 1, A, I} where {A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where {T, N, A<:Union{SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, IsReshaped, S}, Base.ReshapedArray{T, N, A} where {T, N, A<:Union{Base.ReinterpretArray{T, N, S, A, IsReshaped} where {T, N, A<:Union{SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}, IsReshaped, S}, SubArray{T, N, A, I, true} where {T, N, A<:DenseArray, I<:Union{Tuple{Vararg{Real}}, Tuple{AbstractUnitRange, Vararg{Any}}}}, DenseArray}}, DenseArray}, I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T, N, A, Tuple{}} where {T, N, A<:AbstractUnitRange}}}}}, DenseArray{T}, DenseVecOrMat{T}}) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra.BLAS at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\blas.jl:537
[38] axpy!(alpha::Number, x::Array{T}, rx::Union{AbstractRange{Ti}, UnitRange{Ti}}, y::Array{T}, ry::Union{AbstractRange{Ti}, UnitRange{Ti}}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, Ti<:Integer} in LinearAlgebra.BLAS at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\blas.jl:544
[39] axpy!(a::Number, x::Union{SparseArrays.SparseVector{Tv, Ti}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseVector{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}}, false}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, false}} where {Tv, Ti}, y::AbstractVector) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1425
[40] cholesky(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\cholesky.jl:458
[41] cholesky(x::Number, uplo::Symbol) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\cholesky.jl:458
[42] cond(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1158
[43] cond(x::Number, p) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1159
[44] det(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1561
[45] dot(x::AbstractVector, a::Number, y::AbstractVector) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:507
[46] dot(x::Number, y::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:905
[47] eigen(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\eigen.jl:239
[48] eigen(A::Number, B::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\eigen.jl:504
[49] eigmax(A::Union{Number, AbstractMatrix}; permute, scale) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\eigen.jl:373
[50] eigmin(A::Union{Number, AbstractMatrix}; permute, scale) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\eigen.jl:414
[51] eigvals(x::Number; kwargs...) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\eigen.jl:338
[52] eigvecs(A::Union{Number, AbstractMatrix}; kws...) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\eigen.jl:257
[53] isdiag(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1411
[54] ishermitian(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1263
[55] isposdef(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\dense.jl:94
[56] issymmetric(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1224
[57] istril(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1343
[58] istriu(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1299
[59] kron(a::Number, b::Union{Number, AbstractVecOrMat}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\dense.jl:435
[60] kron(a::AbstractVecOrMat, b::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\dense.jl:436
[61] ldiv!(Y::AbstractArray, s::Number, X::AbstractArray) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:277
[62] ldiv!(s::Number, X::AbstractArray) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:271
[63] lmul!(c::Number, A::Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UpperTriangular}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:544
[64] lmul!(x::Number, H::LinearAlgebra.UpperHessenberg) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:95
[65] lmul!(x::T, F::LinearAlgebra.Hessenberg{<:Any, <:LinearAlgebra.UpperHessenberg{T, S} where S<:AbstractMatrix{T}}) where T<:Number in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:614
[66] lmul!(x::T, F::LinearAlgebra.Hessenberg{<:Any, <:LinearAlgebra.SymTridiagonal{T, V} where V<:AbstractVector{T}}) where T<:Number in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:617
[67] lmul!(b::Number, A::SparseArrays.AbstractSparseMatrixCSC) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:1512
[68] lmul!(s::Number, X::AbstractArray) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:219
[69] lowrankupdate!(A::StridedMatrix{T} where T, x::AbstractVector, y::Union{SparseArrays.SparseVector{Tv, Ti}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseVector{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}}, false}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, false}} where {Tv, Ti}, α::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1545
[70] lq(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\lq.jl:121
[71] lu(x::Number; check) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\lu.jl:287
[72] mul!(y::StridedVector{T}, A::StridedVecOrMat{T}, x::StridedVector{T}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:66
[73] mul!(y::StridedVector{T}, transA::LinearAlgebra.Transpose{<:Any, <:StridedVecOrMat{T}}, x::StridedVector{T}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:94
[74] mul!(y::StridedVector{T}, adjA::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{T}}, x::StridedVector{T}, alpha::Number, beta::Number) where T<:Union{Float32, Float64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:116
[75] mul!(y::StridedVector{T}, adjA::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{T}}, x::StridedVector{T}, alpha::Number, beta::Number) where T<:Union{ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:121
[76] mul!(C::StridedMatrix{T}, A::StridedVecOrMat{T}, B::StridedVecOrMat{T}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:167
[77] mul!(C::StridedMatrix{T}, transA::LinearAlgebra.Transpose{<:Any, <:StridedVecOrMat{T}}, B::StridedVecOrMat{T}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:371
[78] mul!(C::StridedMatrix{T}, A::StridedVecOrMat{T}, transB::LinearAlgebra.Transpose{<:Any, <:StridedVecOrMat{T}}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:386
[79] mul!(C::StridedMatrix{T}, transA::LinearAlgebra.Transpose{<:Any, <:StridedVecOrMat{T}}, transB::LinearAlgebra.Transpose{<:Any, <:StridedVecOrMat{T}}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:415
[80] mul!(C::StridedMatrix{T}, transA::LinearAlgebra.Transpose{<:Any, <:StridedVecOrMat{T}}, transB::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{T}}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:428
[81] mul!(C::StridedMatrix{T}, adjA::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{T}}, B::StridedVecOrMat{T}, alpha::Number, beta::Number) where T<:Union{ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:446
[82] mul!(C::StridedMatrix{T}, A::StridedVecOrMat{T}, adjB::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{<:Union{Float32, Float64}}}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:461
[83] mul!(C::StridedMatrix{T}, A::StridedVecOrMat{T}, adjB::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{T}}, alpha::Number, beta::Number) where T<:Union{ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:466
[84] mul!(C::StridedMatrix{T}, adjA::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{T}}, adjB::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{T}}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:481
[85] mul!(C::StridedMatrix{T}, adjA::LinearAlgebra.Adjoint{<:Any, <:StridedVecOrMat{T}}, transB::LinearAlgebra.Transpose{<:Any, <:StridedVecOrMat{T}}, alpha::Number, beta::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:494
[86] mul!(A::StridedVecOrMat, B::LinearAlgebra.SymTridiagonal, C::StridedVecOrMat, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:218
[87] mul!(y::StridedVector{T}, A::LinearAlgebra.Symmetric{T, <:StridedMatrix{T} where T}, x::StridedVector{T}, α::Number, β::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:493
[88] mul!(y::StridedVector{T}, A::LinearAlgebra.Hermitian{T, <:StridedMatrix{T} where T}, x::StridedVector{T}, α::Number, β::Number) where T<:Union{Float32, Float64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:502
[89] mul!(y::StridedVector{T}, A::LinearAlgebra.Hermitian{T, <:StridedMatrix{T} where T}, x::StridedVector{T}, α::Number, β::Number) where T<:Union{ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:511
[90] mul!(C::StridedMatrix{T}, A::LinearAlgebra.Symmetric{T, <:StridedMatrix{T} where T}, B::StridedMatrix{T}, α::Number, β::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:521
[91] mul!(C::StridedMatrix{T}, A::StridedMatrix{T}, B::LinearAlgebra.Symmetric{T, <:StridedMatrix{T} where T}, α::Number, β::Number) where T<:Union{Float32, Float64, ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:530
[92] mul!(C::StridedMatrix{T}, A::LinearAlgebra.Hermitian{T, <:StridedMatrix{T} where T}, B::StridedMatrix{T}, α::Number, β::Number) where T<:Union{Float32, Float64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:539
[93] mul!(C::StridedMatrix{T}, A::StridedMatrix{T}, B::LinearAlgebra.Hermitian{T, <:StridedMatrix{T} where T}, α::Number, β::Number) where T<:Union{Float32, Float64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:548
[94] mul!(C::StridedMatrix{T}, A::LinearAlgebra.Hermitian{T, <:StridedMatrix{T} where T}, B::StridedMatrix{T}, α::Number, β::Number) where T<:Union{ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:557
[95] mul!(C::StridedMatrix{T}, A::StridedMatrix{T}, B::LinearAlgebra.Hermitian{T, <:StridedMatrix{T} where T}, α::Number, β::Number) where T<:Union{ComplexF32, ComplexF64} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:566
[96] mul!(C::StridedVecOrMat, A::SparseArrays.AbstractSparseMatrixCSC, B::Union{LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.LowerTriangular, LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, StridedVector, BitMatrix, BitVector}, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:30
[97] mul!(C::StridedVecOrMat, xA::LinearAlgebra.Adjoint{<:Any, <:SparseArrays.AbstractSparseMatrixCSC}, B::Union{LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.LowerTriangular, LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, StridedVector, BitMatrix, BitVector}, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:56
[98] mul!(C::StridedVecOrMat, xA::LinearAlgebra.Transpose{<:Any, <:SparseArrays.AbstractSparseMatrixCSC}, B::Union{LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.LowerTriangular, LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, StridedVector, BitMatrix, BitVector}, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:56
[99] mul!(C::StridedVecOrMat, X::Union{LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.LowerTriangular, LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}, A::SparseArrays.AbstractSparseMatrixCSC, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:87
[100] mul!(C::StridedVecOrMat, X::Union{LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.LowerTriangular, LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}, xA::LinearAlgebra.Adjoint{<:Any, <:SparseArrays.AbstractSparseMatrixCSC}, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:118
[101] mul!(C::StridedVecOrMat, X::Union{LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.LowerTriangular, LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}}, LinearAlgebra.UnitLowerTriangular, LinearAlgebra.UnitUpperTriangular, LinearAlgebra.UpperTriangular, StridedMatrix, BitMatrix}, xA::LinearAlgebra.Transpose{<:Any, <:SparseArrays.AbstractSparseMatrixCSC}, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:118
[102] mul!(C::StridedVecOrMat{T}, sA::Union{LinearAlgebra.Hermitian{Tv, <:Union{SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, SubArray{Tv, 2, <:SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}, I}} where I<:AbstractUnitRange}}, LinearAlgebra.Symmetric{Tv, <:Union{SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, SubArray{Tv, 2, <:SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}, I}} where I<:AbstractUnitRange}}} where {Tv, Ti}, B::StridedVecOrMat, α::Number, β::Number) where T in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:820
[103] mul!(C::LinearAlgebra.UnitLowerTriangular, A::LinearAlgebra.UnitLowerTriangular, B::LinearAlgebra.UnitLowerTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:701
[104] mul!(C::LinearAlgebra.UnitUpperTriangular, A::LinearAlgebra.UnitUpperTriangular, B::LinearAlgebra.UnitUpperTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:701
[105] mul!(A::LinearAlgebra.LowerTriangular, B::LinearAlgebra.LowerTriangular, C::Number, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:453
[106] mul!(A::LinearAlgebra.LowerTriangular, B::Number, C::LinearAlgebra.LowerTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:453
[107] mul!(A::LinearAlgebra.LowerTriangular, B::LinearAlgebra.UnitLowerTriangular, C::Number, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:453
[108] mul!(A::LinearAlgebra.LowerTriangular, B::Number, C::LinearAlgebra.UnitLowerTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:453
[109] mul!(C::LinearAlgebra.LowerTriangular, A::LinearAlgebra.LowerTriangular, B::LinearAlgebra.LowerTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:701
[110] mul!(C::LinearAlgebra.LowerTriangular, A::LinearAlgebra.LowerTriangular, B::LinearAlgebra.UnitLowerTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:701
[111] mul!(C::LinearAlgebra.LowerTriangular, A::LinearAlgebra.UnitLowerTriangular, B::LinearAlgebra.LowerTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:701
[112] mul!(out::AbstractMatrix, in::StridedMatrix{T} where T, A::LinearAlgebra.Diagonal, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:387
[113] mul!(out::AbstractMatrix, in::StridedMatrix{T} where T, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:390
[114] mul!(out::AbstractMatrix, in::StridedMatrix{T} where T, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:393
[115] mul!(C::AbstractMatrix, A::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, B::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:402
[116] mul!(C::AbstractMatrix, A::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, B::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:403
[117] mul!(C::AbstractVector, A::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, B::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:404
[118] mul!(C::AbstractVector, A::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, B::AbstractVector, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:399
[119] mul!(y::AbstractVector, A::Union{LinearAlgebra.LowerTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UnitLowerTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UnitUpperTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UpperTriangular{T, S} where S<:AbstractMatrix{T}, StridedArray{T, 2}} where T, x::SparseArrays.AbstractSparseVector, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1574
[120] mul!(C::AbstractMatrix, A::LinearAlgebra.AbstractTriangular, B::LinearAlgebra.Tridiagonal, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:662
[121] mul!(C::AbstractMatrix, A::LinearAlgebra.AbstractTriangular, B::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:680
[122] mul!(C::AbstractMatrix, A::LinearAlgebra.AbstractTriangular, B::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:682
[123] mul!(C::AbstractMatrix, A::LinearAlgebra.AbstractTriangular, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:390
[124] mul!(y::AbstractVector, A::SparseArrays.AbstractSparseMatrixCSC, x::SparseArrays.AbstractSparseVector, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1713
[125] mul!(out::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, in::StridedMatrix{T} where T, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:360
[126] mul!(C::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:393
[127] mul!(C::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.AbstractTriangular}, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:395
[128] mul!(C::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:397
[129] mul!(out::AbstractVector, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, in::AbstractVector, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:350
[130] mul!(out::AbstractMatrix, in::LinearAlgebra.Adjoint{<:Any, <:StridedMatrix{T} where T}, A::LinearAlgebra.Diagonal, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:397
[131] mul!(C::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, B::LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T, S}} where {T<:Real, S}}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:431
[132] mul!(out::AbstractMatrix, in::LinearAlgebra.Adjoint{<:Any, <:StridedMatrix{T} where T}, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:400
[133] mul!(out::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, in::LinearAlgebra.Adjoint{<:Any, <:StridedMatrix{T} where T}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:370
[134] mul!(C::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, B::LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.Hermitian{Complex{T}, S}, LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T, S}} where {T<:Real, S}}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:434
[135] mul!(C::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, B::LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{Complex{T}, S}, LinearAlgebra.Symmetric{T, S}} where {T<:Real, S}}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:444
[136] mul!(C::AbstractMatrix, adjA::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, adjB::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:487
[137] mul!(out::AbstractMatrix, in::LinearAlgebra.Adjoint{<:Any, <:StridedMatrix{T} where T}, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:403
[138] mul!(out::AbstractMatrix, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, in::LinearAlgebra.Transpose{<:Any, <:StridedMatrix{T} where T}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:380
[139] mul!(C::AbstractMatrix, adjA::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, transB::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:500
[140] mul!(C::AbstractMatrix, adjA::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, B::AbstractVecOrMat, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:455
[141] mul!(y::AbstractVector, adjA::LinearAlgebra.Adjoint{<:Any, <:Union{LinearAlgebra.LowerTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UnitLowerTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UnitUpperTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UpperTriangular{T, S} where S<:AbstractMatrix{T}, StridedArray{T, 2}} where T}, x::SparseArrays.AbstractSparseVector, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1654
[142] mul!(y::AbstractVector, adjA::LinearAlgebra.Adjoint{<:Any, <:SparseArrays.AbstractSparseMatrixCSC}, x::SparseArrays.AbstractSparseVector, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1753
[143] mul!(y::AbstractVector, adjA::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, x::AbstractVector, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:126
[144] mul!(C::AbstractVector, A::AbstractVecOrMat, transB::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:409
[145] mul!(C::AbstractMatrix, A::AbstractMatrix, J::LinearAlgebra.UniformScaling, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:283
[146] mul!(out::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, in::StridedMatrix{T} where T, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:363
[147] mul!(C::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:394
[148] mul!(C::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.AbstractTriangular}, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:396
[149] mul!(C::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:398
[150] mul!(out::AbstractVector, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, in::AbstractVector, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:353
[151] mul!(out::AbstractMatrix, in::LinearAlgebra.Transpose{<:Any, <:StridedMatrix{T} where T}, A::LinearAlgebra.Diagonal, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:407
[152] mul!(out::AbstractMatrix, in::LinearAlgebra.Transpose{<:Any, <:StridedMatrix{T} where T}, A::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.Diagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:410
[153] mul!(out::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, in::LinearAlgebra.Adjoint{<:Any, <:StridedMatrix{T} where T}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:373
[154] mul!(C::AbstractMatrix, transA::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, transB::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:434
[155] mul!(C::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, B::LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T, S}} where {T<:Real, S}}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:437
[156] mul!(out::AbstractMatrix, in::LinearAlgebra.Transpose{<:Any, <:StridedMatrix{T} where T}, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:413
[157] mul!(out::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, in::LinearAlgebra.Transpose{<:Any, <:StridedMatrix{T} where T}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:383
[158] mul!(C::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, B::LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{Complex{T}, S}, LinearAlgebra.Symmetric{T, S}} where {T<:Real, S}}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:440
[159] mul!(C::AbstractMatrix, A::LinearAlgebra.Transpose{<:Any, <:LinearAlgebra.Diagonal}, B::LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.Hermitian{Complex{T}, S}, LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T, S}} where {T<:Real, S}}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:448
[160] mul!(C::AbstractMatrix, transA::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, transB::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:421
[161] mul!(C::AbstractMatrix, transA::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, B::AbstractVecOrMat, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:380
[162] mul!(y::AbstractVector, transA::LinearAlgebra.Transpose{<:Any, <:Union{LinearAlgebra.LowerTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UnitLowerTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UnitUpperTriangular{T, S} where S<:AbstractMatrix{T}, LinearAlgebra.UpperTriangular{T, S} where S<:AbstractMatrix{T}, StridedArray{T, 2}} where T}, x::SparseArrays.AbstractSparseVector, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1613
[163] mul!(y::AbstractVector, transA::LinearAlgebra.Transpose{<:Any, <:SparseArrays.AbstractSparseMatrixCSC}, x::SparseArrays.AbstractSparseVector, α::Number, β::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1747
[164] mul!(y::AbstractVector, transA::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, x::AbstractVector, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:99
[165] mul!(out::AbstractMatrix{T}, a::Number, B::LinearAlgebra.UniformScaling, α::Number, β::Number) where T in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:288
[166] mul!(C::AbstractMatrix, A::LinearAlgebra.SymTridiagonal, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:388
[167] mul!(C::AbstractMatrix, A::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:389
[168] mul!(out::AbstractMatrix, A::LinearAlgebra.Diagonal, in::StridedMatrix{T} where T, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:357
[169] mul!(out::AbstractMatrix, A::LinearAlgebra.Diagonal, in::LinearAlgebra.Adjoint{<:Any, <:StridedMatrix{T} where T}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:367
[170] mul!(C::AbstractMatrix, A::AbstractVecOrMat, adjB::LinearAlgebra.Adjoint{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:475
[171] mul!(out::AbstractMatrix, A::LinearAlgebra.Diagonal, in::LinearAlgebra.Transpose{<:Any, <:StridedMatrix{T} where T}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:377
[172] mul!(C::AbstractMatrix, A::AbstractVecOrMat, transB::LinearAlgebra.Transpose{<:Any, <:AbstractVecOrMat}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:412
[173] mul!(C::AbstractMatrix, A::LinearAlgebra.Diagonal, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:392
[174] mul!(C::AbstractMatrix, A::AbstractMatrix, B::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:391
[175] mul!(C::AbstractMatrix, A::LinearAlgebra.Tridiagonal, B::LinearAlgebra.AbstractTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:664
[176] mul!(C::AbstractMatrix, A::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, B::AbstractVecOrMat, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:400
[177] mul!(C::AbstractVecOrMat, A::Union{LinearAlgebra.Bidiagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Tridiagonal}, B::AbstractVecOrMat, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:401
[178] mul!(C::AbstractVecOrMat, J::LinearAlgebra.UniformScaling, B::AbstractVecOrMat, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:285
[179] mul!(out::AbstractMatrix, A::LinearAlgebra.UniformScaling, b::Number, α::Number, β::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:303
[180] mul!(A::LinearAlgebra.UpperTriangular, B::LinearAlgebra.UpperTriangular, C::Number, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:453
[181] mul!(A::LinearAlgebra.UpperTriangular, B::Number, C::LinearAlgebra.UpperTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:453
[182] mul!(A::LinearAlgebra.UpperTriangular, B::LinearAlgebra.UnitUpperTriangular, C::Number, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:453
[183] mul!(A::LinearAlgebra.UpperTriangular, B::Number, C::LinearAlgebra.UnitUpperTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:453
[184] mul!(C::LinearAlgebra.UpperTriangular, A::LinearAlgebra.UpperTriangular, B::LinearAlgebra.UpperTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:701
[185] mul!(C::LinearAlgebra.UpperTriangular, A::LinearAlgebra.UpperTriangular, B::LinearAlgebra.UnitUpperTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:701
[186] mul!(C::LinearAlgebra.UpperTriangular, A::LinearAlgebra.UnitUpperTriangular, B::LinearAlgebra.UpperTriangular, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:701
[187] mul!(C::AbstractMatrix, A::AbstractVecOrMat, B::AbstractVecOrMat, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:302
[188] mul!(out::AbstractVector, A::LinearAlgebra.Diagonal, in::AbstractVector, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:347
[189] mul!(y::AbstractVector, A::AbstractVecOrMat, x::AbstractVector, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:81
[190] mul!(C::SparseArrays.AbstractSparseMatrixCSC, A::SparseArrays.AbstractSparseMatrixCSC, b::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:1491
[191] mul!(C::AbstractArray, X::AbstractArray, s::Number, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:140
[192] mul!(C::SparseArrays.AbstractSparseMatrixCSC, b::Number, A::SparseArrays.AbstractSparseMatrixCSC) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:1499
[193] mul!(C::AbstractArray, s::Number, X::AbstractArray, alpha::Number, beta::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:132
[194] norm(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:667
[195] norm(x::Number, p::Real) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:667
[196] opnorm(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:784
[197] opnorm(x::Number, p::Real) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:784
[198] pinv(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\dense.jl:1450
[199] qr(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\qr.jl:426
[200] rank(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1015
[201] rdiv!(X::AbstractArray, s::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:245
[202] rmul!(A::Union{LinearAlgebra.LowerTriangular, LinearAlgebra.UpperTriangular}, c::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:543
[203] rmul!(H::LinearAlgebra.UpperHessenberg, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:94
[204] rmul!(A::SparseArrays.AbstractSparseMatrixCSC, b::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\linalg.jl:1507
[205] rmul!(X::AbstractArray, s::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:181
[206] rmul!(F::LinearAlgebra.Hessenberg{<:Any, <:LinearAlgebra.UpperHessenberg{T, S} where S<:AbstractMatrix{T}}, x::T) where T<:Number in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:613
[207] rmul!(F::LinearAlgebra.Hessenberg{<:Any, <:LinearAlgebra.SymTridiagonal{T, V} where V<:AbstractVector{T}}, x::T) where T<:Number in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:616
[208] svd(x::Number; full, alg) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\svd.jl:178
[209] svd(x::Number, y::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\svd.jl:458
[210] svdvals(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\svd.jl:240
[211] svdvals(x::Number, y::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\svd.jl:565
[212] tr(x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\generic.jl:1037
[213] transpose(x::Number) in Base at number.jl:212
[214] middle(x::Number) in Statistics at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Statistics\src\Statistics.jl:757
[215] middle(x::Number, y::Number) in Statistics at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Statistics\src\Statistics.jl:765
[216] sparse(I, J, v::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsematrix.jl:981
[217] sparse(I, J, v::Number, m, n) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsematrix.jl:985
[218] sparse(I, J, v::Number, m, n, combine::Function) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsematrix.jl:991
[219] sparsevec(I::AbstractVector, V::Union{Number, AbstractVector}) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:246
[220] sparsevec(I::AbstractVector, V::Union{Number, AbstractVector}, len::Integer) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:249
[221] sparsevec(I::AbstractVector, v::Number, combine::Function) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:258
[222] sparsevec(I::AbstractVector, v::Number, len::Integer, combine::Function) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:261
[223] sparsevec(I::AbstractVector, V::Union{Number, AbstractVector}, args...) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:243
[224] AbstractChar(x::Number) in Base at char.jl:49
[225] (::Type{T})(x::Number) where T<:AbstractChar in Base at char.jl:48
[226] (::Type{T})(x::T) where T<:Number in Core at boot.jl:770
[227] Dates.Day(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:55
[228] Dates.Hour(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:61
[229] Dates.Microsecond(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:61
[230] Dates.Millisecond(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:61
[231] Dates.Minute(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:61
[232] Dates.Month(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:55
[233] Dates.Nanosecond(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:61
[234] Dates.Quarter(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:55
[235] Dates.Second(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:61
[236] Dates.Week(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:55
[237] Dates.Year(v::Number) in Dates at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\Dates\src\types.jl:55
[238] rem(::Number, ::Missing) in Base at missing.jl:124
[239] rem(::Missing, ::Number) in Base at missing.jl:123
[240] *(x::Union{SparseArrays.SparseVector{Tv, Ti}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseVector{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}}, false}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, false}} where {Tv, Ti}, a::Number) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1474
[241] *(A::LinearAlgebra.AbstractQ, b::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\qr.jl:661
[242] *(A::LinearAlgebra.SymTridiagonal, B::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:211
[243] *(J::LinearAlgebra.UniformScaling, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:265
[244] *(A::LinearAlgebra.Symmetric, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:634
[245] *(A::LinearAlgebra.UnitLowerTriangular, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:851
[246] *(a::Number, x::Union{SparseArrays.SparseVector{Tv, Ti}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseVector{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}}, false}, SubArray{Tv, 1, <:SparseArrays.AbstractSparseMatrixCSC{Tv, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, false}} where {Tv, Ti}) in SparseArrays at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\SparseArrays\src\sparsevector.jl:1475
[247] *(B::Number, A::LinearAlgebra.Bidiagonal) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:374
[248] *(x::Number, D::LinearAlgebra.Diagonal) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:190
[249] *(x::Number, A::LinearAlgebra.LowerTriangular) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:859
[250] *(x::Number, A::LinearAlgebra.Symmetric) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\symmetric.jl:635
[251] *(a::Number, B::LinearAlgebra.AbstractQ) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\qr.jl:761
[252] *(v::Number, x::Base.TwicePrecision) in Base at twiceprecision.jl:306
[253] *(x::Number, A::LinearAlgebra.UnitLowerTriangular) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:861
[254] *(x::Number, A::LinearAlgebra.UnitUpperTriangular) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:861
[255] *(B::Number, A::LinearAlgebra.SymTridiagonal) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:212
[256] *(B::Number, A::LinearAlgebra.Tridiagonal) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:743
[257] *(x::Number, J::LinearAlgebra.UniformScaling) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:264
[258] *(x::Number, A::LinearAlgebra.UpperTriangular) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:859
[259] *(x::S, F::LinearAlgebra.Hessenberg{<:Any, <:AbstractMatrix{T}}) where {T, S<:Number} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:629
[260] *(x::Number, H::LinearAlgebra.UpperHessenberg) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:115
[261] *(::Number, ::Missing) in Base at missing.jl:124
[262] *(A::LinearAlgebra.UpperTriangular, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:849
[263] *(α::Number, B::AbstractMatrix, C::AbstractMatrix, x::AbstractVector) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1170
[264] *(α::Number, u::AbstractVector, tv::Union{LinearAlgebra.Adjoint{T, var"#s861"}, LinearAlgebra.Transpose{T, var"#s861"}} where {T, var"#s861"<:(AbstractVector)}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1116
[265] *(A::Number, B::AbstractArray) in Base at arraymath.jl:52
[266] *(vt::Union{LinearAlgebra.Adjoint{T, var"#s861"}, LinearAlgebra.Transpose{T, var"#s861"}} where {T, var"#s861"<:(AbstractVector)}, B::AbstractMatrix, x::AbstractVector, δ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1178
[267] *(vt::Union{LinearAlgebra.Adjoint{T, var"#s861"}, LinearAlgebra.Transpose{T, var"#s861"}} where {T, var"#s861"<:(AbstractVector)}, B::AbstractMatrix, C::AbstractMatrix, δ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1179
[268] *(A::LinearAlgebra.Bidiagonal, B::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\bidiag.jl:373
[269] *(A::LinearAlgebra.Tridiagonal, B::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\tridiag.jl:742
[270] *(A::LinearAlgebra.LowerTriangular, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:849
[271] *(x::Base.TwicePrecision, v::Number) in Base at twiceprecision.jl:296
[272] *(H::LinearAlgebra.UpperHessenberg, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:114
[273] *(A::LinearAlgebra.UnitUpperTriangular, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\triangular.jl:851
[274] *(u::AbstractVector, tv::Union{LinearAlgebra.Adjoint{T, var"#s861"}, LinearAlgebra.Transpose{T, var"#s861"}} where {T, var"#s861"<:(AbstractVector)}, γ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1117
[275] *(A::AbstractMatrix, B::AbstractMatrix, γ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1110
[276] *(A::AbstractMatrix, B::AbstractMatrix, γ::Number, δ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1176
[277] *(A::AbstractMatrix, B::AbstractMatrix, x::AbstractVector, δ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1177
[278] *(A::AbstractMatrix, B::AbstractMatrix, C::AbstractMatrix, δ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1186
[279] *(A::AbstractMatrix, x::AbstractVector, γ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1109
[280] *(A::AbstractMatrix, x::AbstractVector, γ::Number, δ::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1175
[281] *(D::LinearAlgebra.Diagonal, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:191
[282] *(A::AbstractArray, B::Number) in Base at arraymath.jl:55
[283] *(F::LinearAlgebra.Hessenberg{<:Any, <:AbstractMatrix{T}}, x::S) where {T, S<:Number} in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\hessenberg.jl:621
[284] *(::Missing, ::Number) in Base at missing.jl:123
[285] *(x::Number) in Base at operators.jl:593
[286] *(α::Number, vt::Union{LinearAlgebra.Adjoint{T, var"#s861"}, LinearAlgebra.Transpose{T, var"#s861"}} where {T, var"#s861"<:(AbstractVector)}, C::AbstractMatrix, x::AbstractVector) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1171
[287] *(x::T, y::T) where T<:Number in Base at promotion.jl:455
[288] *(x::Number, y::Number) in Base at promotion.jl:380
[289] *(α::Number, β::Number, C::AbstractMatrix, D::AbstractMatrix) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1169
[290] *(α::Number, β::Number, C::AbstractMatrix, x::AbstractVector) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:1168
[291] +(J::LinearAlgebra.UniformScaling, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:145
[292] +(x::Base.TwicePrecision, y::Number) in Base at twiceprecision.jl:279
[293] +(x::Number, y::Base.TwicePrecision) in Base at twiceprecision.jl:283
[294] +(::Number, ::Missing) in Base at missing.jl:124
[295] +(x::Number, J::LinearAlgebra.UniformScaling) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:146
[296] +(x::Number) in Base at operators.jl:592
[297] +(x::T, y::T) where T<:Number in Base at promotion.jl:454
[298] +(x::Number, y::Number) in Base at promotion.jl:379
[299] +(::Missing, ::Number) in Base at missing.jl:123
[300] -(J::LinearAlgebra.UniformScaling, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:147
[301] -(x::Base.TwicePrecision, y::Number) in Base at twiceprecision.jl:293
[302] -(x::Number, y::Base.TwicePrecision) in Base at twiceprecision.jl:294
[303] -(::Number, ::Missing) in Base at missing.jl:124
[304] -(x::Number, J::LinearAlgebra.UniformScaling) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:148
[305] -(x::T, y::T) where T<:Number in Base at promotion.jl:456
[306] -(x::Number, y::Number) in Base at promotion.jl:381
[307] -(::Missing, ::Number) in Base at missing.jl:123
[308] //(x::Number, y::Complex) in Base at rational.jl:79
[309] //(X::AbstractArray, y::Number) in Base at rational.jl:82
[310] ==(x::T, y::T) where T<:Number in Base at promotion.jl:468
[311] ==(x::Number, y::Number) in Base at promotion.jl:418
[312] ^(J::LinearAlgebra.UniformScaling, x::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\uniformscaling.jl:318
[313] ^(D::LinearAlgebra.Diagonal, a::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\diagonal.jl:194
[314] ^(A::AbstractMatrix, p::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\dense.jl:529
[315] ^(::Number, ::Missing) in Base at missing.jl:124
[316] ^(::Missing, ::Number) in Base at missing.jl:123
[317] ^(x::Number, y::Rational) in Base at rational.jl:479
[318] ^(::Irrational{:ℯ}, x::Number) in Base.MathConstants at mathconstants.jl:119
[319] ^(b::Number, A::AbstractMatrix) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\dense.jl:607
[320] ^(x::Number, p::Integer) in Base at intfuncs.jl:291
[321] ^(x::T, y::T) where T<:Number in Base at promotion.jl:458
[322] ^(x::Number, y::Number) in Base at promotion.jl:413
[323] acot(y::Number) in Base.Math at special/trig.jl:1164
[324] acoth(y::Number) in Base.Math at special/trig.jl:1167
[325] acsc(y::Number) in Base.Math at special/trig.jl:1164
[326] acsch(y::Number) in Base.Math at special/trig.jl:1167
[327] asec(y::Number) in Base.Math at special/trig.jl:1164
[328] asech(y::Number) in Base.Math at special/trig.jl:1167
[329] axes(x::Number) in Base at number.jl:82
[330] axes(x::Number, d::Integer) in Base at number.jl:83
[331] convert(::Type{T}, x::T) where T<:Number in Base at number.jl:6
[332] convert(::Type{T}, x::Number) where T<:Number in Base at number.jl:7
[333] convert(::Type{AbstractChar}, x::Number) in Base at char.jl:183
[334] convert(::Type{T}, x::Number) where T<:AbstractChar in Base at char.jl:184
[335] convert(::Type{Base.TwicePrecision{T}}, x::Number) where T in Base at twiceprecision.jl:263
[336] copy(x::Number) in Base at number.jl:113
[337] cosc(x::Number) in Base.Math at special/trig.jl:1097
[338] cot(z::Number) in Base.Math at special/trig.jl:1142
[339] cotd(z::Number) in Base.Math at special/trig.jl:1152
[340] coth(z::Number) in Base.Math at special/trig.jl:1147
[341] csc(z::Number) in Base.Math at special/trig.jl:1142
[342] cscd(z::Number) in Base.Math at special/trig.jl:1152
[343] csch(z::Number) in Base.Math at special/trig.jl:1147
[344] deg2rad(z::Number) in Base.Math at math.jl:313
[345] div(::Number, ::Missing, r::RoundingMode) in Base at missing.jl:130
[346] div(::Missing, ::Number, r::RoundingMode) in Base at missing.jl:129
[347] findall(p::Base.Fix2{typeof(in)}, x::Number) in Base at array.jl:2318
[348] findall(testf::Function, x::Number) in Base at array.jl:2317
[349] first(x::Number) in Base at number.jl:111
[350] firstindex(x::Number) in Base at number.jl:88
[351] firstindex(x::Number, d::Int64) in Base at number.jl:89
[352] fma(x::T, y::T, z::T) where T<:Number in Base at promotion.jl:460
[353] fma(x::Number, y::Number, z::Number) in Base at promotion.jl:415
[354] get(f::Union{Function, Type}, x::Number, i::Integer) in Base at number.jl:108
[355] get(f::Union{Function, Type}, x::Number, ind::Tuple) in Base at number.jl:109
[356] get(x::Number, i::Integer, default) in Base at number.jl:106
[357] get(x::Number, ind::Tuple, default) in Base at number.jl:107
[358] getindex(x::Number) in Base at number.jl:95
[359] getindex(x::Number, i::Integer) in Base at number.jl:96
[360] getindex(x::Number, I::Integer...) in Base at number.jl:101
[361] getindex(x::Union{AbstractChar, Number}, ::CartesianIndex{0}) in Base at multidimensional.jl:831
[362] getindex(t::BenchmarkTools.Trial, i::Number) in BenchmarkTools at C:\Users\bguenter\.julia\packages\BenchmarkTools\7xSXH\src\trials.jl:40
[363] hypot(x::Number) in Base.Math at math.jl:642
[364] hypot(x::Number, y::Number, xs::Number...) in Base.Math at math.jl:643
[365] in(x::Number, y::Number) in Base at number.jl:270
[366] inv(x::Number) in Base at number.jl:243
[367] isapprox(x::Number, y::Number; atol, rtol, nans, norm) in Base at floatfuncs.jl:286
[368] isempty(x::Number) in Base at number.jl:269
[369] iseven(n::Number) in Base at int.jl:132
[370] isfinite(x::Number) in Base at number.jl:78
[371] isnan(x::Number) in Base at float.jl:535
[372] isodd(n::Number) in Base at int.jl:112
[373] ispow2(x::Number) in Base at intfuncs.jl:414
[374] iterate(x::Number) in Base at number.jl:267
[375] iterate(x::Number, ::Any) in Base at number.jl:268
[376] keys(::Number) in Base at number.jl:93
[377] kron!(c::AbstractVecOrMat, a::AbstractVecOrMat, b::Number) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\dense.jl:421
[378] kron!(c::AbstractVecOrMat, a::Number, b::AbstractVecOrMat) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\dense.jl:422
[379] last(x::Number) in Base at number.jl:112
[380] lastindex(x::Number) in Base at number.jl:90
[381] lastindex(x::Number, d::Int64) in Base at number.jl:91
[382] length(x::Number) in Base at number.jl:87
[383] log(::Irrational{:ℯ}, x::Number) in Base.MathConstants at mathconstants.jl:124
[384] log(b::T, x::T) where T<:Number in Base.Math at math.jl:315
[385] log(b::Number, x::Number) in Base.Math at math.jl:358
[386] map(f, x::Number, ys::Number...) in Base at number.jl:272
[387] mapreduce(f, op, a::Number) in Base at reduce.jl:421
[388] mod(::Number, ::Missing) in Base at missing.jl:124
[389] mod(::Missing, ::Number) in Base at missing.jl:123
[390] muladd(A::Union{LinearAlgebra.Adjoint{var"#s861", <:StridedMatrix{T} where T}, LinearAlgebra.Transpose{var"#s861", <:StridedMatrix{T} where T}, StridedMatrix{var"#s861"}} where var"#s861"<:Number, y::AbstractVector{<:Number}, z::Union{Number, AbstractVector}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:238
[391] muladd(A::Union{LinearAlgebra.Adjoint{var"#s861", <:StridedMatrix{T} where T}, LinearAlgebra.Transpose{var"#s861", <:StridedMatrix{T} where T}, StridedMatrix{var"#s861"}} where var"#s861"<:Number, B::Union{LinearAlgebra.Adjoint{var"#s860", <:StridedMatrix{T} where T}, LinearAlgebra.Transpose{var"#s860", <:StridedMatrix{T} where T}, StridedMatrix{var"#s860"}} where var"#s860"<:Number, z::Union{Number, AbstractVecOrMat}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:245
[392] muladd(x::LinearAlgebra.Adjoint{T, <:AbstractVector} where T, A::AbstractMatrix, z::Union{Number, AbstractVecOrMat}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:231
[393] muladd(u::AbstractVector, v::Union{LinearAlgebra.Adjoint{T, var"#s861"}, LinearAlgebra.Transpose{T, var"#s861"}} where {T, var"#s861"<:(AbstractVector)}, z::Union{Number, AbstractArray}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:218
[394] muladd(x::LinearAlgebra.Transpose{T, <:AbstractVector} where T, A::AbstractMatrix, z::Union{Number, AbstractVecOrMat}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:233
[395] muladd(x::Real, z::Complex, y::Number) in Base at complex.jl:336
[396] muladd(A::AbstractMatrix, y::AbstractVecOrMat, z::Union{Number, AbstractArray}) in LinearAlgebra at C:\Users\bguenter\.julia\juliaup\julia-1.7.3+0.x64\share\julia\stdlib\v1.7\LinearAlgebra\src\matmul.jl:204
[397] muladd(x::T, y::T, z::T) where T<:Number in Base at promotion.jl:462
[398] muladd(x::Number, y::Number, z::Number) in Base at promotion.jl:416
[399] ndims(x::Number) in Base at number.jl:85
[400] one(x::T) where T<:Number in Base at number.jl:335
[401] only(x::Number) in Base.Iterators at iterators.jl:1365
[402] rad2deg(z::Number) in Base.Math at math.jl:312
[403] reduce(op, a::Number) in Base at reduce.jl:460
[404] sec(z::Number) in Base.Math at special/trig.jl:1142
[405] secd(z::Number) in Base.Math at special/trig.jl:1152
[406] sech(z::Number) in Base.Math at special/trig.jl:1147
[407] sign(x::Number) in Base at number.jl:161
[408] sinc(x::Number) in Base.Math at special/trig.jl:1081
[409] size(x::Number) in Base at number.jl:80
[410] size(x::Number, d::Integer) in Base at number.jl:81
[411] widemul(x::Bool, y::Number) in Base at int.jl:811
[412] widemul(x::Number, y::Bool) in Base at int.jl:812
[413] widemul(x::Number, y::Number) in Base at number.jl:265
[414] zero(x::Number) in Base at number.jl:296